// Generated from StringLexer.g4 by ANTLR 4.4
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class StringLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		STRING_LITERAL=1, LDOUBLE_QUOTE=2;
	public static final int STRING_MODE = 1;
	public static String[] modeNames = {
		"DEFAULT_MODE", "STRING_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'"
	};
	public static final String[] ruleNames = {
		"CHAR", "LDOUBLE_QUOTE", "STRING_LITERAL", "TEXT"
	};


	public StringLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "StringLexer.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\4\35\b\1\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\3\2\5\2\16\n\2\3\3\3\3\3\3\3\3\3\3\3\4\3"+
		"\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\2\2\6\4\2\6\4\b\3\n\2\4\2\3\3\4\2\13\f"+
		"\"\u0080\32\2\6\3\2\2\2\3\b\3\2\2\2\3\n\3\2\2\2\4\r\3\2\2\2\6\17\3\2\2"+
		"\2\b\24\3\2\2\2\n\31\3\2\2\2\f\16\t\2\2\2\r\f\3\2\2\2\16\5\3\2\2\2\17"+
		"\20\7$\2\2\20\21\3\2\2\2\21\22\b\3\2\2\22\23\b\3\3\2\23\7\3\2\2\2\24\25"+
		"\7$\2\2\25\26\3\2\2\2\26\27\b\4\4\2\27\30\b\4\5\2\30\t\3\2\2\2\31\32\5"+
		"\4\2\2\32\33\3\2\2\2\33\34\b\5\2\2\34\13\3\2\2\2\5\2\3\r\6\5\2\2\4\3\2"+
		"\4\2\2\2f\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}