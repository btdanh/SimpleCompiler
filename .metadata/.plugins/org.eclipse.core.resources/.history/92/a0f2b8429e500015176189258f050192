grammar Decaf;

/* Parser grammar */
program: CLASS PROGRAM BRACKET_OPEN field_decl_s method_decl_s BRACKET_CLOSE;

field_decl_s: (field_decl)*;
field_decl: TYPE field_decl_name (COMMA field_decl_name)*;
field_decl_name: (id | id SQUARE_BRACKET_OPEN int_literal SQUARE_BRACKET_CLOSE);


method_decl_s: (method_decl)*;
method_decl:;


/*Lexer grammar */
CLASS: 'class';
PROGRAM: 'Program';

BRACKET_OPEN: '{';
BRACKET_CLOSE: '}';

TYPE: 'int' | 'boolean';
SQUARE_BRACKET_OPEN: '[';
SQUARE_BRACKET_CLOSE: ']';
COMMA: ','

